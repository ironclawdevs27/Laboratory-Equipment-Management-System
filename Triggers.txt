--TRIGGERS 


--Trigger On Equipment Table     
CREATE TABLE equipment_audit(
    UserID VARCHAR(25),
    Transaction_performed VARCHAR(10),
    Time_of_Transaction DATE
);
CREATE OR REPLACE TRIGGER equipment_audit_trg
    AFTER 
    INSERT OR UPDATE OR DELETE 
    ON Equipment
    FOR EACH ROW    
DECLARE
   operation VARCHAR2(10);
BEGIN
   -- determine the transaction type
   operation := CASE  
         WHEN INSERTING THEN 'INSERT'
         WHEN UPDATING THEN 'UPDATE'
         WHEN DELETING THEN 'DELETE'
   END;

   -- insert a row into the audit table   
   INSERT INTO equipment_audit(UserID,Transaction_performed,Time_of_Transaction)
   VALUES(USER,operation,SYSDATE);
END;


--Trigger On Labs Table  
CREATE TABLE Labs_audit(
    UserID VARCHAR(25),
    Transaction_performed VARCHAR(10),
    Time_of_Transaction DATE
);
CREATE OR REPLACE TRIGGER labs_audit_trg
    AFTER 
    INSERT OR UPDATE OR DELETE 
    ON Labs
    FOR EACH ROW    
DECLARE
   operation VARCHAR2(10);
BEGIN
   -- determine the transaction type
   operation := CASE  
         WHEN INSERTING THEN 'INSERT'
         WHEN UPDATING THEN 'UPDATE'
         WHEN DELETING THEN 'DELETE'
   END;

   -- insert a row into the audit table   
   INSERT INTO Labs_audit(UserID,Transaction_performed,Time_of_Transaction)
   VALUES(USER,operation,SYSDATE);
END;


--Trigger On Students Table  
CREATE TABLE Students_audit(
    UserID VARCHAR(25),
    Transaction_performed VARCHAR(10),
    Time_of_Transaction DATE
);
CREATE OR REPLACE TRIGGER student_audit_trg
    AFTER 
    INSERT OR UPDATE OR DELETE 
    ON Students
    FOR EACH ROW    
DECLARE
   operation VARCHAR2(10);
BEGIN
   -- determine the transaction type
   operation := CASE  
         WHEN INSERTING THEN 'INSERT'
         WHEN UPDATING THEN 'UPDATE'
         WHEN DELETING THEN 'DELETE'
   END;

   -- insert a row into the audit table   
   INSERT INTO Students_audit(UserID,Transaction_performed,Time_of_Transaction)
   VALUES(USER,operation,SYSDATE);
END;


--Trigger On Admin Table  
CREATE TABLE Admin_audit(
    UserID VARCHAR(25),
    Transaction_performed VARCHAR(10),
    Time_of_Transaction DATE
);
CREATE OR REPLACE TRIGGER admin_audit_trg
    AFTER 
    INSERT OR UPDATE OR DELETE 
    ON Admin
    FOR EACH ROW    
DECLARE
   operation VARCHAR2(10);
BEGIN
   -- determine the transaction type
   operation := CASE  
         WHEN INSERTING THEN 'INSERT'
         WHEN UPDATING THEN 'UPDATE'
         WHEN DELETING THEN 'DELETE'
   END;

   -- insert a row into the audit table   
   INSERT INTO Admin_audit(UserID,Transaction_performed,Time_of_Transaction)
   VALUES(USER,operation,SYSDATE);
END;


--Trigger On User_ Table  
CREATE TABLE User_audit(
    UserID VARCHAR(25),
    Transaction_performed VARCHAR(10),
    Time_of_Transaction DATE
);
CREATE OR REPLACE TRIGGER user_audit_trg
    AFTER 
    INSERT OR UPDATE OR DELETE 
    ON User_
    FOR EACH ROW    
DECLARE
   operation VARCHAR2(10);
BEGIN
   -- determine the transaction type
   operation := CASE  
         WHEN INSERTING THEN 'INSERT'
         WHEN UPDATING THEN 'UPDATE'
         WHEN DELETING THEN 'DELETE'
   END;

   -- insert a row into the audit table   
   INSERT INTO User_audit(UserID,Transaction_performed,Time_of_Transaction)
   VALUES(USER,operation,SYSDATE);
END;
